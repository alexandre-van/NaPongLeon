
# WebSockets connection upgrade
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream frontend {
	server frontend:3000;
}
upstream authentication {
	server authentication:8000;
}
upstream pong {
	server pong:8000;
}
upstream tournament {
	server tournament:8000;
}
upstream game_manager {
	server game_manager:8000;
}

upstream adminer {
  server adminer:8080;
}

server {
	listen 8080;
	server_name localhost;

  # Frontend
	location / {
    if ($request_uri !~ ^/($|api/|static/|sockjs-node/)) {
      return 301 $scheme://$host:8080/;
    }
		proxy_pass http://frontend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
	}

  # proxy for development
  location /static/ {
    proxy_pass http://frontend;
  }

  location /static/pong/ {
    proxy_pass http://pong;
  }

  # Static files
  location /static_files/ {
    alias /static_files/;
    error_log /var/log/nginx/static_error.log debug;
    access_log /var/log/nginx/static_access.log;
  }

  location /media/ {
    alias /media/;
    error_log /var/log/nginx/media_error.log debug;
    access_log /var/log/nginx/media_access.log;
  }

  # WebSocket support for React development server
  location /sockjs-node {
      proxy_pass http://frontend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
  }


  location /adminer/ {
    proxy_pass http://adminer;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }


  
  location /ws/authentication/ {
    proxy_pass http://authentication;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /ws/pong/ {
    proxy_pass http://pong;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Routes API with WebSocket support and added security against external http request
  location /api/ {
    # Only authorize the internal http requests
    add_header 'Access-Control-Allow-Origin' '$http_origin' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRFToken' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 172800;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204; # Message: No Content
    }
    
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location /api/authentication/oauth/42/callback {
      proxy_pass http://authentication;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header X-OAuth-Callback true;
    
      # Deactivate referer verification for this endpoint
      proxy_set_header Referer "";
    }

    location /api/authentication/ {
      proxy_pass http://authentication;
    }

    location /api/pong/ {
      proxy_pass http://pong;
    }

    location /api/tournament/ {
      proxy_pass http://tournament;
    }

    location /api/game_manager/ {
      proxy_pass http://game_manager;
    }
  }



}

